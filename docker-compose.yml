services:
  # app-explorer-ui:
  #   build:
  #     context: ./app-explorer-ui
  #     dockerfile: Dockerfile
  #   ports:
  #     - "1337:3000"
  #   # environment:
  #   #   - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
  #   #   - FRONTEND_SUCCESS_URL=http://localhost:3000/success
  #   #   - FRONTEND_CANCEL_URL=http://localhost:3000/cancel                                                                                                                                                   ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc  depends_on:
  #   depends_on:
  #     # postgres:
  #     #   condition: service_healthy
  #     api-gateway:
  #       condition: service_started
  #     audio-storage-ui:
  #       condition: service_started
  #     subscription-ui:
  #       condition: service_started
  #     user-ui:
  #       condition: service_started
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - AWS_ACCESS_KEY=test
      - AWS_SECRET_KEY=test
      - AWS_REGION=us-east-2
      - AWS_S3_BUCKET=mikedevportfolio
      - STORAGE_TYPE=s3
    volumes:
      - api_gateway:/api_gateway
    depends_on:
      user-api:
        condition: service_started
      subscription-api:
        condition: service_started
      audio-storage-api:
        condition: service_started
      # postgres:
      #   condition: service_healthy
  audio-storage-api:
    build:
      context: ./audio-storage-api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - AWS_ACCESS_KEY=test
      - AWS_SECRET_KEY=test
      - AWS_REGION=us-east-2
      - AWS_S3_BUCKET=mikedevportfolio
      - STORAGE_TYPE=s3
    volumes:
      - audio_storage:/audio_storage
    depends_on:
      postgres:
        condition: service_healthy
  # localstack:
  #   condition: service_healthy

  user-api:
    build:
      context: ./user-api
      dockerfile: Dockerfile
    ports:
      - "7777:7777"
    environment:
      - AWS_ACCESS_KEY=test
      - AWS_SECRET_KEY=test
      - AWS_REGION=us-east-2
      - AWS_S3_BUCKET=mikedevportfolio
      - STORAGE_TYPE=s3
    volumes:
      - user:/user
    depends_on:
      postgres:
        condition: service_healthy

  subscription-api:
    build:
      context: ./subscription-api
      dockerfile: Dockerfile
    ports:
      - "4444:4444"
    environment:
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - FRONTEND_SUCCESS_URL=http://localhost:3000/success
      - FRONTEND_CANCEL_URL=http://localhost:3000/cancel
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      # localstack:  

  subscription-ui:
    build:
      context: ./subscription-ui
      dockerfile: Dockerfile
    ports:
      - "4000:3000"
    environment:
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - FRONTEND_SUCCESS_URL=http://localhost:3000/success
      - FRONTEND_CANCEL_URL=http://localhost:3000/cancel
    depends_on:
      subscription-api:
        condition: service_started
  audio-storage-ui:
    build:
      context: ./audio-storage-ui
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - FRONTEND_SUCCESS_URL=http://localhost:3000/success
      - FRONTEND_CANCEL_URL=http://localhost:3000/cancel
    depends_on:
      audio-storage-api:
        condition: service_started
  user-ui:
    build:
      context: ./user-ui
      dockerfile: Dockerfile
    ports:
      - "7000:3000"
    environment:
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - FRONTEND_SUCCESS_URL=http://localhost:3000/success
      - FRONTEND_CANCEL_URL=http://localhost:3000/cancel
    volumes:
      - user:/user
    depends_on:
      user-api:
        condition: service_started
volumes:
  api_gateway:
  audio_storage:
  payment:
  user:
  postgres_data:
  localstack_data:
    # config_server:
    # eureka_server:
